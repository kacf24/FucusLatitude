time_low <- which(rate <= -1)
t_l<-which.min(rate[time_low])
time_low <- time_low[t_l]
time_high <- time_low+1
#What point is the iButton covered at?
xxx<-1
timedif<-workingSet[time_high[xxx],1]-workingSet[time_low[xxx],1]
timedif <-timedif/2
submergedtime<- workingSet[time_low[xxx],1]+timedif
timeseq<-data.frame(submergedtime)
lvl<-buoy[which.min(abs(difftime(buoy[,1],submergedtime,units="hours"))),2]
if(type=="exposed"){buoy$uw<-buoy[,2] <= lvl}else{buoy$uw<-buoy[,2] >= lvl}
zz<-unname(tapply(which(buoy$uw==TRUE), cumsum(c(1, diff(which(buoy$uw==TRUE))) != 1), range))
xx <- data.frame(zz)
for (i in 1:nrow(xx)){
start<-unlist(xx$zz[i])[1]
end<-unlist(xx$zz[i])[2]
start=buoy[start,1]
end=buoy[end,1]
workingSet$exp<-ifelse(workingSet$DateTime >= start & workingSet$DateTime <= end,"kp","rm")
assign(paste0("Mensor",i),subset(workingSet,workingSet$exp=="kp"),envir=globalenv())
}
Kept <- do.call(rbind, lapply(paste0(rep("Mensor",nrow(xx)),seq(1,nrow(xx))), get) )
Kept<-Kept[order(Kept$DateTime),]
assign(paste0("Viana",z),Kept)
rm(list=ls(pattern="Mensor"),envir=globalenv())
}
Comparisons <- rbind(Amarosa1,Amarosa2,Cadiz1,Cadiz2,Cadiz3,Cadiz4,Cadiz5,Cadiz6,Cadiz7,Cadiz8,Halifax1,Halifax2,Halifax3,Halifax4,Lewes1,Lewes2,Lewes3,Lewes4,Minehead1,Minehead2,Minehead3,Minehead4,Viana1,Viana2,Schoodic1,Schoodic2,Schoodic3,Schoodic4,Schoodic5,Schoodic6,Schoodic7,Schoodic8,Schoodic9,Schoodic10,Schoodic11,Schoodic12,Schoodic13,Schoodic14,Beaufort1,Beaufort2,Beaufort3,Beaufort4)
Comparisons$time<-strftime(Comparisons$DateTime, format="%H:%M:%S")
for(mm in nrow(Comparisons):1){
if(Comparisons$time[mm] < "06:00:00"){Comparisons <- Comparisons[-mm,]}else
if(Comparisons$time[mm] > "19:00:00"){Comparisons <- Comparisons[-mm,]}
}
esquisse::esquisser()
ggplot(data = Comparisons) +
aes(x = time, y = Temp, color = CE) +
geom_boxplot(fill = '#0c4c8a') +
theme_minimal() +
facet_wrap(vars(Site))
library(ggplot2)
ggplot(data = Comparisons) +
aes(x = time, y = Temp, color = CE) +
geom_boxplot(fill = '#0c4c8a') +
theme_minimal() +
facet_wrap(vars(Site))
View(Schoodic)
getwd()
library(readr)
testdata <- read_csv("Desktop/testdata.csv")
View(testdata)
cat_row <-cat(testdata$`2010`,testdata$`2011`,testdata$`2012`)
cat_row
cat_row <-print0(testdata$`2010`,testdata$`2011`,testdata$`2012`)
cat_row <-paste0(testdata$`2010`,testdata$`2011`,testdata$`2012`)
table(cat_row)
install.packages("DESeq2")
load("~/Desktop/barplots/barplots.RData")
ggplot(holder3, aes(x=holder3$Family,y=holder3$`Mean Abundance`)) +
geom_point(aes(shape=holder3$treatment))+coord_flip()+xlab(holder3$Family)+geom_errorbar(aes(ymin=ifelse(holder3$`Mean Abundance`-holder3$SD < 0,0,holder3$`Mean Abundance`-holder3$SD), ymax=holder3$`Mean Abundance`+sqrt(holder3$SD)), width=.2)
library(readr)
library(ggplot2)
ggplot(agg_wind, aes(x=agg_wind$Group.1,y=agg_wind$x.mn)) +
geom_point(aes(shape=agg_wind$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))
holder2 <- holder[holder$Family %in% aggdata$Group.1,]
View(agg_wind)
holder2 <- holder[agg_wind$Group.1%in% aggdata$Group.4,]
holder2 <- agg_wind[agg_wind$Group.1%in% aggdata$Group.4,]
holder2 <- agg_wind[agg_wind$Group.1 %in% aggdata$Group.4,]
holder2<-as_factor(agg_wind$Group.1[order(agg_wind1$Group.4,agg_wind$Group.1)])
library(haven)
holder2<-as_factor(agg_wind$Group.1[order(agg_wind1$Group.4,agg_wind$Group.1)])
holder2 <- agg_wind[agg_wind$Group.1 %in% agg_wind$Group.4,]
holder2 <- agg_wind[agg_wind$Group.1 %in% agg_wind$Group.4,]
agg_wind$Group.1[order(agg_wind1$Group.4,agg_wind$Group.1)]
agg_wind1$Group.4
holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,6], holder2[,1] ),]
holder2 <- agg_wind[,]
holder2<-as_factor(agg_wind$Group.1[order(agg_wind1$Group.4,agg_wind$Group.1)])
holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder2 <- agg_wind[,]
View(agg_wind1)
View(agg_wind)
#holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,4], holder2[,1] ),]
holder3$Family<-as_factor(holder3$Family)
holder3$Family<-as_factor(holder3$Group.1)
holder3$Family <- fct_rev(holder3$Family)
ggplot(holder3, aes(x=holder3$Family,y=holder3$`Mean Abundance`)) +
geom_point(aes(shape=holder3$treatment))+coord_flip()+xlab(holder3$Family)+geom_errorbar(aes(ymin=ifelse(holder3$`Mean Abundance`-holder3$SD < 0,0,holder3$`Mean Abundance`-holder3$SD), ymax=holder3$`Mean Abundance`+sqrt(holder3$SD)), width=.2)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$treatment))+coord_flip()+xlab(holder3$Family)+geom_errorbar(aes(ymin=ifelse(holder3$`Mean Abundance`-holder3$SD < 0,0,holder3$`Mean Abundance`-holder3$SD), ymax=holder3$`Mean Abundance`+sqrt(holder3$SD)), width=.2)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))
holder2 <- agg_wind[,]
#holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,4], holder2[,1] ),]
View(holder3)
holder3$Group.1<-as_factor(holder3$Group.1)
ggplot(holder3, aes(x=holder3$Group.1,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))
str(holder2$Group.1)
#holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,4], holder2[,1] ),]
holder2 <- agg_wind[,]
#holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,4], holder2[,1] ),]
View(holder3)
holder3$Family<-as_factor(holder3$Family)
holder3$Family<-as_factor(holder3$Group.1)
holder3$Family
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+coord_flip()+xlab(holder3$Family)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+coord_flip()+xlab(holder3$Family)+facet_grid(col=vars(Group.2))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+coord_flip()+ylab(holder3$Family)+facet_grid(col=vars(Group.2))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+xlab(holder3$Family)+facet_grid(col=vars(Group.2))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+xlab(holder3$Family)
levels(holder3$Family)
order(holder3$Family)
holder3$Family<-as_factor(holder3$Group.1,ordered=TRUE)
holder3$Family<-as_factor(holder3$Group.1,ordered = FALSE)
#holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,4], holder2[,1] ),]
holder3$Family<-as_factor(holder3$Group.1,ordered = FALSE)
holder3$Family<-as_factor(holder3$Group.1,ordered = TRUE)
holder3$Family<-as_factor(holder3$Group.1)
levels(holder3$Family)
#holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,4], holder2[,1] ),]
row.names(holder3)<- print(1:314)
row.names(holder3)<- c(1:314)
levels(holder3$Family)
holder3$Family<-as_factor(holder3$Group.1)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+xlab(holder3$Family)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+xlab(holder3$Family)+coord_flip()
holder3$Family<-as_factor(holder3$Group.1)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+xlab(holder3$Family)+coord_flip()
order(holder3$Family)
holder2 <- agg_wind[,]
#holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,4] ),]
row.names(holder3)<- c(1:314)
holder3$Family<-as_factor(holder3$Group.1)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+xlab(holder3$Family)+coord_flip()
detach("package:haven", unload = TRUE)
library(haven)
#holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,4] ),]
holder3$Family<-as_factor(holder3$Group.1)
order(holder3$Family)
#holder2<-as_factor(agg_wind$Group.1[order(agg_wind$Group.4,agg_wind$Group.1)])
holder3<-holder2[order(holder2[,4],holder2[,1] ),]
holder3$Family<-as_factor(holder3$Group.1)
holder3$Phylum<-as_factor(holder3$Group.4)
order(holder3$Family) <- order(holder3$Phylum)
levels(holder3$Family) <- levels(holder3$Phylum)
holder2 <- agg_wind[,]
holder2<-as_factor(holder2$Group.1[order(holder2$Group.4,holder2$Group.1)])
holder2 <- agg_wind
holder2<-as_factor(holder2$Group.1[order(holder2$Group.4,holder2$Group.1)])
holder2
agg_wind <- holder2
load("~/Desktop/barplots/barplots.RData")
holder2 <- agg_wind
holder2<-as_factor(holder2$Group.1[order(holder2$Group.4,holder2$Group.1)])
holder2<-as_factor(holder2[order(holder2$Group.4,holder2$Group.1)])
holder2 <- agg_wind
holder2<-as_factor(holder2[order(holder2$Group.4,holder2$Group.1)])
holder2<-as_factor(holder2[order(holder2$Group.4,holder2$Group.1)],)
holder2<-as_factor(holder2[order(holder2$Group.4,holder2$Group.1),])
View(holder2)
plot(holder2$Group.1)
plot(x=holder2$Group.1,y=holder2$x.mn)
ggplot(agg_wind, aes(x=holder2$Group.1,y=holder2$x.mn)) +
geom_point(aes(shape=holder2$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab(holder2$Group.1)
View(agg_wind)
load("~/Desktop/barplots/barplots.RData")
agg_wind$Group.1 <- as.character(agg_wind$Group.1)
holder2 <- agg_wind
holder2<-as_factor(holder2[order(holder2$Group.4,holder2$Group.1),])
ggplot(agg_wind, aes(x=holder2$Group.1,y=holder2$x.mn)) +
geom_point(aes(shape=holder2$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab(holder2$Group.1)
holder2 <- agg_wind
agg_wind$Group.1 <- as.character(agg_wind$Group.1)
agg_wind$Group.2 <- as.character(agg_wind$Group.2)
agg_wind$Group.3 <- as.character(agg_wind$Group.3)
agg_wind$Group.4 <- as.character(agg_wind$Group.4)
holder2 <- agg_wind
holder2<-as_factor(holder2[order(holder2$Group.4,holder2$Group.1),])
holder2 <- agg_wind
holder2<-as_factor(holder2$Group.1[order(holder2$Group.4,holder2$Group.1)])
ggplot(holder2, aes(x=holder2$Group.1,y=holder2$x.mn)) +
geom_point(aes(shape=holder2$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab(holder2$Group.1)
holder2 <- agg_wind
holder2[,1]<-as_factor(holder2$Group.1[order(holder2$Group.4,holder2$Group.1)])
View(holder2)
ggplot(holder2, aes(x=holder2$Group.1,y=holder2$x.mn)) +
geom_point(aes(shape=holder2$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab(holder2$Group.1)
holder2 <- agg_wind
holder3<-holder2[order(holder2[,4], holder2[,1] ),]
holder3$Family<-as_factor(holder3$Family)
holder3$Family<-as_factor(holder3$Group.1)
holder3$Family <- fct_rev(holder3$Family)
library(tidyr)
holder3$Family <- fct_rev(holder3$Family)
library(tidyverse)
holder3$Family <- fct_rev(holder3$Family)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab(holder3$Family)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab(holder3$Family,name="Bacterial Family")
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_discrete(values=c(19,17,19))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_discrete(19,17,19)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_discrete(19,19,19)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_discrete(c(19,19,19))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(c(19,19,19))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(values=c(19,19,19))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative")values=c(19,19,19))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(19,19,19))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(19,19,19))+scale_color_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(19,19,19))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(15,16,17))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2),labels=c("test"))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(15,16,17))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2),labeller =c("1","2","3","4","5") )+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(15,16,17))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2),label_value =c("1","2","3","4","5") )+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(15,16,17))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
holder3$Group.3
[holder3$Group.3=="vegetative",]
holder3$Group.3[holder3$Group.3=="vegetative"]
holder3[holder3$Group.3=="vegetative",3]
holder3[holder3$Group.2=="control",3]<-
agg_wind$Group.1 <- as.character(agg_wind$Group.1)
holder3[holder3$Group.2=="control",2]<-
agg_wind$Group.1 <- as.character(agg_wind$Group.1)
holder3[holder3$Group.2=="control",2]
holder3[holder3$Group.2=="control",2]<-"Control"
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2),label_value =c("1","2","3","4","5") )+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(15,16,17))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(15,16,17))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
holder3[holder3$Group.2=="dry",2]<-"Dry"
holder3[holder3$Group.2=="none",2]<-"F. vesiculosus"
holder3[holder3$Group.2=="none_Fd",2]<-"F. distichus"
holder3[holder3$Group.2=="none_Fs",2]<-"F. spiralis"
holder3[holder3$Group.2=="watered",2]<-"Watered"
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(15,16,17))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
tiff("Plot3.tiff", width = 8.5, height = 11, units = 'in', res = 3000)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(15,16,17))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
dev.off()
dev.off()
dev.off()
tiff("Plot3.tiff", width = 8.5, height = 22, units = 'in', res = 3000)
ggplot(holder3, aes(x=holder3$Family,y=holder3$x.mn)) +
geom_point(aes(shape=holder3$Group.3,color=holder3$Group.3))+coord_flip()+facet_grid(col=vars(Group.2))+xlab("Bacterial Family")+ylab("Mean Reads")+labs(shape="Treatment")+scale_shape_manual(labels=c("Holdfast","Reproductive","Vegetative"),values=c(15,16,17))+scale_color_manual(name="Treatment",labels=c("Holdfast","Reproductive","Vegetative"),values=c("red","green","blue"))
dev.off()
library(readr)
library(ggplot2)
library(tidyverse)
#Set correct working directory and read in files
setwd("~/Desktop/ForGithub")
tax <- read_csv("taxonomy.csv")
ASVs <- read_csv("ASVs.csv")
meta <- read_csv("metadata.csv")
#Coverts data into a long format for easy subsetting
data_long <- gather(ASVs, Site, measurement, colnames(ASVs[,2:ncol(ASVs)]), factor_key=TRUE)
data_long_met<-merge(data_long,meta,by.y="samples",by.x="Site")
data_long_met_tax<-merge(data_long_met,tax,by.x="samples",by.y="ASVid")
#Subset to correct data, in this case removes water column samples, holdfast samples, and days 1/2
s_data_long_met_tax<-subset(data_long_met_tax, treatment != "none")
s_data_long_met_tax<-subset(s_data_long_met_tax,tissue!="holdfast"&day=="4")
#Creates a dataframe and transforms data into presence/absence
pa_data <- s_data_long_met_tax
pa_data[which(pa_data$measurement<1),3] <- 0
pa_data[which(pa_data$measurement>=1),3] <- 1
#calculates the percentage of samples an ASV in present in
agg_padata <- do.call(data.frame, aggregate(pa_data$measurement, list(pa_data$samples,pa_data$treatment), FUN = function(x) c(mn = mean(x))))
#Creates a cutoff between 0 and 1
agg_padata<-subset(agg_padata,agg_padata$x >= 0.5)
#Creates long and wide dataframes, which are both useful for different types of analyses
agg_padata$x3 <- 1
agg_padata<-agg_padata[,-c(3)]
names(pa_data)
names(agg_padata)
View(agg_padata)
x<-spread(agg_padata,Group.2,x3)
names(agg_padata) <- c("ASVid","Treatment","Present")
View(agg_padata)
vc<-merge(x,tax,by.x="Group.1",by.y="ASVid")
View(vc)
#Set correct working directory and read in files
setwd("~/Desktop/ForGithub")
tax <- read_csv("taxonomy_2.csv")
ASVs <- read_csv("ASVs_2.csv")
tax <- read_csv("taxonomy.csv")
ASVs <- read_csv("ASVs.csv")
meta <- read_csv("metadata.csv")
`%notin%` <- Negate(`%in%`)
#Coverts data into a long format for easy subsetting
data_long <- gather(ASVs, Site, measurement, colnames(ASVs[,2:227]), factor_key=TRUE)
data_long_met<-merge(data_long,meta,by.y="samples",by.x="Site")
data_long_met_tax<-merge(data_long_met,tax,by.x="samples",by.y="ASVid")
#Subset to correct data, in this case removes water column samples,
s_data_long_met_tax<-subset(data_long_met_tax,day=="4")
test<-do.call(data.frame, aggregate(s_data_long_met_tax$measurement, list(s_data_long_met_tax$samples), FUN = function(x) c(mn = sum(x))))
View(test)
non_zero_data_long_met_tax<-subset(s_data_long_met_tax,s_data_long_met_tax$samples %notin% test[which(test$x==0),1])
test<-do.call(data.frame, aggregate(non_zero_data_long_met_tax$measurement, list(non_zero_data_long_met_tax$samples,non_zero_data_long_met_tax$treatment,non_zero_data_long_met_tax$tissue), FUN = function(x) c(mn = sum(x))))
View(test)
#Finds the number of reads each ASV accounts for by tissue and treatment
test<-do.call(data.frame, aggregate(non_zero_data_long_met_tax$measurement, list(non_zero_data_long_met_tax$samples,non_zero_data_long_met_tax$treatment,non_zero_data_long_met_tax$tissue), FUN = function(x) c(mn = sum(x))))
test$combo <- paste0(test$Group.1,test$Group.2,test$Group.3)
non_zero_data_long_met_tax$combo <- paste0(non_zero_data_long_met_tax$samples,non_zero_data_long_met_tax$treatment,non_zero_data_long_met_tax$tissue)
non_zero_data_long_met_tax2<-subset(non_zero_data_long_met_tax,non_zero_data_long_met_tax$combo %notin% test[which(test$x==0),5])
View(non_zero_data_long_met_tax2)
View(test)
View(non_zero_data_long_met_tax2)
non_zero_data_long_met_tax2<-subset(non_zero_data_long_met_tax,non_zero_data_long_met_tax$combo %notin% test[which(test$x==0),5])
test<-do.call(data.frame, aggregate(non_zero_data_long_met_tax2$measurement, list(non_zero_data_long_met_tax2$Family,non_zero_data_long_met_tax2$treatment,non_zero_data_long_met_tax2$tissue), FUN = function(x) c(mn = sum(x))))
View(test)
day4_meta <- subset(meta,day =="4")
daysy <- do.call(data.frame, aggregate(day4_meta$sample_ID, list(day4_meta$treatment,day4_meta$tissue), FUN = function(x) c(mn = length(x))))
View(daysy)
day4_samples <- do.call(data.frame, aggregate(day4_meta$sample_ID, list(day4_meta$treatment,day4_meta$tissue), FUN = function(x) c(mn = length(x))))
View(day4_samples)
#merges together number of reads per family, n of samples, and calculates a mean
test_day4_samples<-merge(test,day4_samples,by="combo")
test_day4_samples<-test_day4_samples[,-c(1,6,7)]
#merges together number of reads per family, n of samples, and calculates a mean
test_day4_samples<-merge(test,day4_samples,by="combo")
#Creates a metadata subset, finds the n of each treatment by tissue
day4_meta <- subset(meta,day =="4")
day4_samples <- do.call(data.frame, aggregate(day4_meta$sample_ID, list(day4_meta$treatment,day4_meta$tissue), FUN = function(x) c(mn = length(x))))
day4_samples$combo <- paste0(day4_samples$Group.1,day4_samples$Group.2)
test$combo <- paste0(test$Group.2,test$Group.3)
#merges together number of reads per family, n of samples, and calculates a mean
test_day4_samples<-merge(test,day4_samples,by="combo")
test_day4_samples<-test_day4_samples[,-c(1,6,7)]
colnames(test_day4_samples) <- c("Family","Treatment","Tissue","Sum","n")
test_day4_samples$avg <- test_day4_samples$Sum/test_day4_samples$n
View(test_day4_samples)
#Creates a cutoff, and get rid of things below that
cutoff<-170/2
test_day4_samples<-subset(test_day4_samples,test_day4_samples$avg > cutoff)
library(readr)
library(ggplot2)
library(tidyverse)
library(dplyr)
#Set correct working directory and read in files
setwd("~/Desktop/ForGithub")
tax <- read_csv("taxonomy.csv")
ASVs <- read_csv("ASVs.csv")
meta <- read_csv("metadata.csv")
#A custom function
`%notin%` <- Negate(`%in%`)
#Converts data into proprotional
for(i in 2:ncol(ASVs)){
ASVs[,i]<-ASVs[,i]/colSums(ASVs)[i]}
#Coverts data into a long format for easy subsetting
data_long <- gather(ASVs, Site, measurement, colnames(ASVs[,2:227]), factor_key=TRUE)
data_long_met<-merge(data_long,meta,by.y="samples",by.x="Site")
data_long_met_tax<-merge(data_long_met,tax,by.x="samples",by.y="ASVid")
#Subset to correct data
s_data_long_met_tax<-subset(data_long_met_tax,day=="4")
#Coverts data into a long format for easy subsetting
data_long <- gather(ASVs, Site, measurement, colnames(ASVs[,2:227]), factor_key=TRUE)
data_long_met<-merge(data_long,meta,by.y="samples",by.x="Site")
data_long_met_tax<-merge(data_long_met,tax,by.x="samples",by.y="ASVid")
#Subset to correct data
s_data_long_met_tax<-subset(data_long_met_tax,day=="4")
test<-do.call(data.frame, aggregate(s_data_long_met_tax$measurement, list(s_data_long_met_tax$Class), FUN = function(x) c(mn = sum(x))))
non_zero_data_long_met_tax<-subset(s_data_long_met_tax,s_data_long_met_tax$Class %notin% test[which(test$x<1),1])
zero_data_long_met_tax<-subset(s_data_long_met_tax,s_data_long_met_tax$Class %in% test[which(test$x<1),1])
zero_data_long_met_tax$Class<-"Other"
test<-do.call(data.frame, aggregate(combined$measurement, list(combined$Class,combined$tissue,combined$treatment), FUN = function(x) c(mn = sum(x))))
combined<-rbind(non_zero_data_long_met_tax,zero_data_long_met_tax)
test<-do.call(data.frame, aggregate(combined$measurement, list(combined$Class,combined$tissue,combined$treatment), FUN = function(x) c(mn = sum(x))))
colnames(test)<-c("class","tissue","treatment","x")
yeez <- subset(meta,day =="4")
yeezy <- do.call(data.frame, aggregate(yeez$sample_ID, list(yeez$treatment,yeez$tissue), FUN = function(x) c(mn = length(x))))
yeezy$combo <- paste0(yeezy$Group.1,yeezy$Group.2)
test$combo <- paste0(test$treatment,test$tissue)
test_yeezy<-merge(test,yeezy,by="combo")
test$mn <- test_yeezy$x.x/test_yeezy$x.y
#Renames Tissues and Treatments
test$treatment <- as.character(test$treatment)
test$tissue <- as.character(test$tissue)
test[which(test$treatment=="none" & test$tissue=="na"),2]<-"holdfast"
test[which(test$treatment=="none"),3]<-"WC"
test[which(test$treatment=="dry"),3]<-"D"
test[which(test$treatment=="watered"),3]<-"W"
test[which(test$treatment=="control"),3]<-"PC"
test[which(test$treatment=="none_Fv"),3]<-"Fv"
test[which(test$treatment=="none_Fs"),3]<-"Fs"
test[which(test$treatment=="none_Fd"),3]<-"Fd"
test[which(test$tissue=="holdfast"),2]<-"H"
test[which(test$tissue=="reproductive"),2]<-"R"
test[which(test$tissue=="vegetative"),2]<-"V"
test2<-do.call(data.frame, aggregate(combined$measurement, list(combined$Class), FUN = function(x) c(mn = sum(x))))
#Reorders and renames for legend
test$class<-as.character(test$class)
test$sort <- 1
test[test$class == "Acidimicrobiia",7] <- 1
test[test$class == "Other",7] <- 2
test[test$class == "Sphingobacteriia",7] <- 3
test[test$class == "Verrucomicrobiae",7] <- 4
test[test$class == "Planctomycetacia",7] <- 5
test[test$class == "Flavobacteriia",7] <- 6
test[test$class == "Betaproteobacteria",7] <- 7
test[test$class == "Alphaproteobacteria",7] <- 8
test[test$class == "Gammaproteobacteria",7] <- 9
test[test$class == "Acidimicrobiia",1] <- "Acidimicrobiia (A)"
test[test$class == "Sphingobacteriia",1] <- "Sphingobacteriia (B)"
test[test$class == "Verrucomicrobiae",1] <- "Verrucomicrobiae (V)"
test[test$class == "Planctomycetacia",1] <- "Planctomycetacia (Pl)"
test[test$class == "Flavobacteriia",1] <- "Flavobacteriia (B)"
test[test$class == "Betaproteobacteria",1] <- "Betaproteobacteria (Pr)"
test[test$class == "Alphaproteobacteria",1] <- "Alphaproteobacteria (Pr)"
test[test$class == "Gammaproteobacteria",1] <- "Gammaproteobacteria (Pr)"
test2<-test[order(test[,7]),]
test2$class<-as_factor(test2$class)
test <- test2
colz <- c("#3800DE","#CCCCCC", "#C5CF08", "#D67240", "#000000", "#E1FF21", "#179BB5", "#8C1ED6", "#25CC4F")
ggplot(data=test,aes(x=test$tissue,y=test$mn,fill=test$class))+geom_bar(position="fill",stat = "identity")+ facet_grid(cols = vars(test$treatment))+scale_fill_manual(values = colz,name="Class")  + theme_classic()+ theme(strip.text.x = element_text(size = 16,face="bold"),axis.text.y = element_text(size=10,face="bold"),axis.text.x = element_text(size=12,face="bold"),axis.title.x = element_text(size=16, face="bold"),axis.title.y = element_text(size=16, face="bold"),legend.text=element_text(size=10,face="bold"),legend.title = element_text(size = 12,face="bold"))+ xlab("Tissue")+ylab("Mean Proportion")
test<-do.call(data.frame, aggregate(s_data_long_met_tax$measurement, list(s_data_long_met_tax$Class), FUN = function(x) c(mn = sum(x))))
View(test)
sum(test$x)
#Gets rid of things that are less than 1
non_zero_data_long_met_tax<-subset(s_data_long_met_tax,s_data_long_met_tax$Class %notin% test[which(test$x<1),1])
#Gets rid of things that are less than 1 and lumps them into an "Other" categroy
non_zero_data_long_met_tax<-subset(s_data_long_met_tax,s_data_long_met_tax$Class %notin% test[which(test$x<1),1])
zero_data_long_met_tax<-subset(s_data_long_met_tax,s_data_long_met_tax$Class %in% test[which(test$x<1),1])
zero_data_long_met_tax$Class<-"Other"
combined<-rbind(non_zero_data_long_met_tax,zero_data_long_met_tax)
test<-do.call(data.frame, aggregate(combined$measurement, list(combined$Class,combined$tissue,combined$treatment), FUN = function(x) c(mn = sum(x))))
View(test)
colnames(test)<-c("class","tissue","treatment","x")
#Finds the (n=) for each tissue and treatment and calculates mean
day_4 <- subset(meta,day =="4")
day_4_data <- do.call(data.frame, aggregate(day_4$sample_ID, list(day_4$treatment,day_4$tissue), FUN = function(x) c(mn = length(x))))
day_4_data$combo <- paste0(day_4_data$Group.1,day_4_data$Group.2)
test$combo <- paste0(test$treatment,test$tissue)
test_day_4_data<-merge(test,day_4_data,by="combo")
test$mn <- test_day_4_data$x.x/test_day_4_data$x.y
#Renames Tissues and Treatments
test$treatment <- as.character(test$treatment)
test$tissue <- as.character(test$tissue)
test[which(test$treatment=="none" & test$tissue=="na"),2]<-"holdfast"
test[which(test$treatment=="none"),3]<-"WC"
test[which(test$treatment=="dry"),3]<-"D"
test[which(test$treatment=="watered"),3]<-"W"
test[which(test$treatment=="control"),3]<-"PC"
test[which(test$treatment=="none_Fv"),3]<-"Fv"
test[which(test$treatment=="none_Fs"),3]<-"Fs"
test[which(test$treatment=="none_Fd"),3]<-"Fd"
test[which(test$tissue=="holdfast"),2]<-"H"
test[which(test$tissue=="reproductive"),2]<-"R"
test[which(test$tissue=="vegetative"),2]<-"V"
test2<-do.call(data.frame, aggregate(combined$measurement, list(combined$Class), FUN = function(x) c(mn = sum(x))))
#Reorders and renames for legend
test$class<-as.character(test$class)
test$sort <- 1
test[test$class == "Acidimicrobiia",7] <- 1
test[test$class == "Other",7] <- 2
test[test$class == "Sphingobacteriia",7] <- 3
test[test$class == "Verrucomicrobiae",7] <- 4
test[test$class == "Planctomycetacia",7] <- 5
test[test$class == "Flavobacteriia",7] <- 6
test[test$class == "Betaproteobacteria",7] <- 7
test[test$class == "Alphaproteobacteria",7] <- 8
test[test$class == "Gammaproteobacteria",7] <- 9
test[test$class == "Acidimicrobiia",1] <- "Acidimicrobiia (A)"
test[test$class == "Sphingobacteriia",1] <- "Sphingobacteriia (B)"
test[test$class == "Verrucomicrobiae",1] <- "Verrucomicrobiae (V)"
test[test$class == "Planctomycetacia",1] <- "Planctomycetacia (Pl)"
test[test$class == "Flavobacteriia",1] <- "Flavobacteriia (B)"
test[test$class == "Betaproteobacteria",1] <- "Betaproteobacteria (Pr)"
test[test$class == "Alphaproteobacteria",1] <- "Alphaproteobacteria (Pr)"
test[test$class == "Gammaproteobacteria",1] <- "Gammaproteobacteria (Pr)"
test2<-test[order(test[,7]),]
test2$class<-as_factor(test2$class)
test <- test2
colz <- c("#3800DE","#CCCCCC", "#C5CF08", "#D67240", "#000000", "#E1FF21", "#179BB5", "#8C1ED6", "#25CC4F")
ggplot(data=test,aes(x=test$tissue,y=test$mn,fill=test$class))+geom_bar(position="fill",stat = "identity")+ facet_grid(cols = vars(test$treatment))+scale_fill_manual(values = colz,name="Class")  + theme_classic()+ theme(strip.text.x = element_text(size = 16,face="bold"),axis.text.y = element_text(size=10,face="bold"),axis.text.x = element_text(size=12,face="bold"),axis.title.x = element_text(size=16, face="bold"),axis.title.y = element_text(size=16, face="bold"),legend.text=element_text(size=10,face="bold"),legend.title = element_text(size = 12,face="bold"))+ xlab("Tissue")+ylab("Mean Proportion")
