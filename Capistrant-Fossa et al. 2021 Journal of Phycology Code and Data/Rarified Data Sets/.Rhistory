ggplot(data=PhytoplanktonData,aes(x=Date,y=Abs,group=TubeGroup))+geom_point()
ggplot(data=PhytoplanktonData,aes(x=Date,y=Abs,group=Species))+geom_point()
ggplot(data=PhytoplanktonData,aes(x=Date,y=Abs,color=Group))+geom_point()
ggplot(data=PhytoplanktonData,aes(x=Date,y=Abs,color=TubeGroup))+geom_point()
PhytoplanktonData$TubeGroup<-as.factor(PhytoplanktonData$TubeGroup)
ggplot(data=PhytoplanktonData,aes(x=Date,y=Abs,color=TubeGroup))+geom_point()
PhytoplanktonData$TubeGroup <- paste(PhytoplanktonData$Species,PhytoplanktonData$Cycle)
PhytoplanktonData$TubeGroup<-as.factor(PhytoplanktonData$TubeGroup)
ggplot(data=PhytoplanktonData,aes(x=Date,y=Abs,color=TubeGroup))+geom_point()
library(readxl)
PhytoplanktonData <- read_excel("C:/Users/Rocky/Desktop/PhytoplanktonData.xlsx")
View(PhytoplanktonData)
PhytoplanktonData$TubeGroup <- paste(PhytoplanktonData$Species,PhytoplanktonData$Cycle)
PhytoplanktonData$TubeGroup<-as.factor(PhytoplanktonData$TubeGroup)
ggplot(data=PhytoplanktonData,aes(x=Date,y=Abs,color=TubeGroup))+geom_point()
library(ggplot2)
ggplot(data=PhytoplanktonData,aes(x=Date,y=Abs,color=TubeGroup))+geom_point()
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
summarySE(PhytoplanktonData,measurevar = "Abs",groupsvar=c("Date","TubeGroup"))
summarySE(PhytoplanktonData,measurevar = "Abs",groupvars=c("Date","TubeGroup"))
library(plyr)
library(tidyverse)
install.packages("plyr")
library(tidyverse)
Sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
library(plyr)
library(readxl)
PhytoplanktonData <- read_excel("C:/Users/Rocky/Desktop/PhytoplanktonData.xlsx")
View(PhytoplanktonData)
PhytoplanktonData$TubeGroup <- paste(PhytoplanktonData$Species,PhytoplanktonData$Cycle)
PhytoplanktonData$TubeGroup<-as.factor(PhytoplanktonData$TubeGroup)
summarySE(PhytoplanktonData,measurevar = "Abs",groupvars=c("Date","TubeGroup"))
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
summarySE(PhytoplanktonData,measurevar = "Abs",groupvars=c("Date","TubeGroup"))
stuffy<-summarySE(PhytoplanktonData,measurevar = "Abs",groupvars=c("Date","TubeGroup"))
View(stuffy)
ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white")
library(ggplot2)
ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white")
ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white")
ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("Fluorescence")
ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("Fluorescence") + theme_bw()
ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("Fluorescence") + theme_bw()+geom_line()
install.packages("gridExtra")
p1<-ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("Fluorescence") + theme_bw()+geom_line()
p2<-ggplot(stuffy, aes(x=Date, y=log(Abs), colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
require(gridExtra)
grid.arrange(p1, p2, ncol=2)
PhytoplanktonDataLog <- PhytoplanktonData
PhytoplanktonDataLog$Abs <- log(Abs)
PhytoplanktonDataLog$Abs <- log(PhytoplanktonDataLog$Abs)
stuffy2<-summarySE(PhytoplanktonDataLog,measurevar = "Abs",groupvars=c("Date","TubeGroup"))
p2<-ggplot(stuffy2, aes(x=Date, y=log(Abs), colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
grid.arrange(p1, p2, ncol=2)
View(stuffy2)
View(stuffy)
ggplot(stuffy2, aes(x=Date, y=log(Abs), colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
ggplot(stuffy2, aes(x=Date, y=log(Abs), colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+se), colour="black", width=.1,data=stuffy2) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
p1<-ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+sd), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("Fluorescence") + theme_bw()+geom_line()
ggplot(stuffy2, aes(x=Date, y=log(Abs), colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-stuffy2$sd, ymax=Abs+stuffy2$sd), colour="black", width=.1,data=stuffy2) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
require(gridExtra)
ggplot(stuffy2, aes(x=Date, y=log(Abs), colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+sd), colour="black", width=.1,data=stuffy2) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+sd), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("Fluorescence") + theme_bw()+geom_line()
ggplot(stuffy2, aes(x=Date, y=log(Abs), colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+sd), colour="black", width=.1,data=stuffy2) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+sd), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("Fluorescence") + theme_bw()+geom_line()
ggplot(stuffy2, aes(x=Date, y=log(Abs), colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+sd), colour="black", width=.1,data=stuffy2) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
ggplot(stuffy2, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+sd), colour="black", width=.1,data=stuffy2) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
p1<-ggplot(stuffy, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+sd), colour="black", width=.1) +
geom_point(size=3, shape=21, fill="white") + ylab("Fluorescence") + theme_bw()+geom_line()
p2<-ggplot(stuffy2, aes(x=Date, y=Abs, colour=TubeGroup, group=TubeGroup)) +
geom_errorbar(aes(ymin=Abs-sd, ymax=Abs+sd), colour="black", width=.1,data=stuffy2) +
geom_point(size=3, shape=21, fill="white") + ylab("log(Fluorescence)") + theme_bw()+geom_line()
grid.arrange(p1, p2, ncol=2)
install.packages("ggpubr")
library(ggpubr)
compare_means(Abs ~ TubeGroup + Date,  data = PhytoplanktonData, method = "anova")
compare_means(Abs ~ TubeGroup,  data = PhytoplanktonData, method = "anova")
ggline(PhytoplanktonData, x = "Date", y = "Abs", add = "mean_se",
color = "supp", palette = "jco")+
stat_compare_means(aes(group = supp), label = "p.signif",
label.y = c(16, 25, 29))
ggline(PhytoplanktonData, x = "Date", y = "Abs", add = "mean_se")+
stat_compare_means(aes(group = supp), label = "p.signif",
label.y = c(16, 25, 29))
ggline(PhytoplanktonData, x = "Date", y = "Abs", add = "mean_se",
color = "TubeGroup", palette = "jco")+
stat_compare_means(aes(group = TubeGroup), label = "p.signif",
label.y = c(16, 25, 29))
subset(PhytoplanktonData,PhytoplanktonData$Species=="Amp")
Amp<-subset(PhytoplanktonData,PhytoplanktonData$Species=="Amp")
ggline(Amp, x = "Date", y = "Abs", add = "mean_se",
color = "TubeGroup", palette = "jco")+
stat_compare_means(aes(group = TubeGroup), label = "p.signif",
label.y = c(16, 25, 29))
View(Amp)
ggline(Amp, x = "Date", y = "Abs", add = "mean_se",
color = "TubeGroup", palette = "jco")+
stat_compare_means(aes(group = TubeGroup), label = "p.signif",
label.y = c(16, 25, 29),method = "t.test")
ggline(Amp, x = "Date", y = "Abs", add = "mean_se",
color = "TubeGroup", palette = "jco")+
stat_compare_means(aes(group = TubeGroup), label = "p.signif",
label.y = c(10,,16, 35, 55),method = "t.test")
ggline(Amp, x = "Date", y = "Abs", add = "mean_se",
color = "TubeGroup", palette = "jco")+
stat_compare_means(aes(group = TubeGroup), label = "p.signif",
label.y = c(10,16, 35, 55),method = "t.test")
ggline(Amp, x = "Date", y = "Abs", add = "mean_se",
color = "TubeGroup", palette = "jco")+
stat_compare_means(aes(group = TubeGroup), label = "p.signif", ,method = "t.test")
library(readxl)
MNS357_Metabolites <- read_excel("C:/Users/Rocky/Downloads/MNS357_Metabolites.xlsx")
View(MNS357_Metabolites)
MNS357_Metabolites$KEY <- paste0(MNS357_Metabolites$Sample,MNS357_Metabolites$RT,MNS357_Metabolites$Mass)
table(MNS357_Metabolites$KEY)
which(table(MNS357_Metabolites$KEY) = 1)
which(table(MNS357_Metabolites$KEY) == 1)
x<-which(table(MNS357_Metabolites$KEY) == 1)
table(MNS357_Metabolites$KEY)
x<-table(MNS357_Metabolites$KEY)[which(table(MNS357_Metabolites$KEY) == 1)]
x
names(x)
names(x) %in% MNS357_Metabolites$KEY
MNS357_Metabolites$KEY %in% names(x)
MNS357_Metabolites[-c(which(MNS357_Metabolites$KEY %in% names(x)==FALSE)),]
y<-MNS357_Metabolites[-c(which(MNS357_Metabolites$KEY %in% names(x)==FALSE)),]
View(y)
View(MNS357_Metabolites)
View(y)
y<-MNS357_Metabolites[-c(which(MNS357_Metabolites$KEY %in% names(x)==TRUE)),]
aggregate(x = MNS357_Metabolites$Intensity, by = list(Sample,Replicate,RT,Mass), FUN = "mean")
aggregate(x = MNS357_Metabolites$Intensity, by = list(MNS357_Metabolites$Sample,MNS357_Metabolites$Replicate,MNS357_Metabolites$RT,MNS357_Metabolites$Mass), FUN = "mean")
MNS357_Metabolites <- read_excel("C:/Users/Rocky/Downloads/MNS357_Metabolites.xlsx")
MNS357_Metabolites<-aggregate(x = MNS357_Metabolites$Intensity, by = list(MNS357_Metabolites$Sample,MNS357_Metabolites$Replicate,MNS357_Metabolites$RT,MNS357_Metabolites$Mass), FUN = "sum")
MNS357_Metabolites <- read_excel("C:/Users/Rocky/Downloads/MNS357_Metabolites.xlsx")
MNS357_Metabolites<-aggregate(x = MNS357_Metabolites$Intensity, by = list(MNS357_Metabolites$Sample,MNS357_Metabolites$Replicate,MNS357_Metabolites$RT,MNS357_Metabolites$Mass), FUN = "sum")
MNS357_Metabolites$KEY <- paste0(MNS357_Metabolites$Sample,MNS357_Metabolites$RT,MNS357_Metabolites$Mass)
MNS357_Metabolites <- read_excel("C:/Users/Rocky/Downloads/MNS357_Metabolites.xlsx")
MNS357_Metabolites<-aggregate(x = MNS357_Metabolites$Intensity, by = list(MNS357_Metabolites$Sample,MNS357_Metabolites$Replicate,MNS357_Metabolites$RT,MNS357_Metabolites$Mass), FUN = "sum")
View(MNS357_Metabolites)
MNS357_Metabolites$KEY <- paste0(MNS357_Metabolites[,1],MNS357_Metabolites[,3],MNS357_Metabolites[,4])
x<-table(MNS357_Metabolites$KEY)[which(table(MNS357_Metabolites$KEY) == 1)]
y<-MNS357_Metabolites[-c(which(MNS357_Metabolites$KEY %in% names(x)==TRUE)),]
View(y)
names(y)
colnames(y) <- c("Sample","Replicate","RT","MASS","INTENSITY")
View(y)
colnames(y) <- c("Sample","Replicate","RT","Mass","Intensity")
y$sample
colnames(y) <- c("Sample","Replicate","RT","Mass","Intensity","KEY")
y$Sample
y$Sample <- paste0(y$Sample,"-",y$Replicate)
y<-y[,-c(2,6)]
View(y)
samples <- unique(y$Sample)
y[,c(1,3,2,4)]
y<-y[,c(1,3,2,4)]
View(y)
setwd("C:/Users/Rocky/Desktop/R Stuff/Metabolomics")
?write.csv()
for(i 1:length(samples)){
temp <- subset(y,y$Sample==samples[i])
name <- paste(samples[i],".csv")
write.csv(temp,file=name,row.names = FALSE)
}
for(i in 1:length(samples)){
temp <- subset(y,y$Sample==samples[i])
name <- paste(samples[i],".csv")
write.csv(temp,file=name,row.names = FALSE)
}
for(i in 1:length(samples)){
temp <- subset(y[,2:4],y$Sample==samples[i])
name <- paste(samples[i],".csv")
write.csv(temp,file=name,row.names = FALSE)
}
library(readxl)
PCO <- read_excel("C:/Users/Rocky/Desktop/PCOnewSuppl.xlsx")
Meta <- read_csv("C:/Users/Rocky/Desktop/Capistrant-Fossa et al. 2021 Journal of Phycology Code and Data/Rarified Data Sets/FucusPumEnvironmental4918Metadata.csv")
PCOMeta<-merge(PCO,Meta,by="SampleName")
PCOMeta<-PCOMeta[-c(which(PCOMeta$Site=="Green")),]
PCOMeta<-PCOMeta[-c(which(PCOMeta$Site=="Avei")),]
PCOMeta$TissueSite<-paste0(PCOMeta$Tissue,PCOMeta$Site)
PCOMeta[PCOMeta$Tissue=="filter","Tissue"] <- "WC"
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
a<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Tissue)) + geom_point() +
xlab("PCO 1") + ylab("PCO 2")+ theme_classic()+scale_color_manual(values=cbPalette) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + ylab("PCO2 [17%]") + xlab("PCO1 [9%]")
a
PCO <- read_excel("C:/Users/Rocky/Desktop/PCOnewSuppl.xlsx")
Meta <- read_csv("C:/Users/Rocky/Desktop/Capistrant-Fossa et al. 2021 Journal of Phycology Code and Data/Rarified Data Sets/FucusPumEnvironmental4918Metadata.csv")
library(readr)
Meta <- read_csv("C:/Users/Rocky/Desktop/Capistrant-Fossa et al. 2021 Journal of Phycology Code and Data/Rarified Data Sets/FucusPumEnvironmental4918Metadata.csv")
PCOMeta<-merge(PCO,Meta,by="SampleName")
PCOMeta<-PCOMeta[-c(which(PCOMeta$Site=="Green")),]
PCOMeta<-PCOMeta[-c(which(PCOMeta$Site=="Avei")),]
PCOMeta$TissueSite<-paste0(PCOMeta$Tissue,PCOMeta$Site)
PCOMeta[PCOMeta$Tissue=="filter","Tissue"] <- "WC"
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
a<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Tissue)) + geom_point() +
xlab("PCO 1") + ylab("PCO 2")+ theme_classic()+scale_color_manual(values=cbPalette) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + ylab("PCO2 [17%]") + xlab("PCO1 [9%]")
a
library(ggplot)
library(ggplot2)
a<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Tissue)) + geom_point() +
xlab("PCO 1") + ylab("PCO 2")+ theme_classic()+scale_color_manual(values=cbPalette) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + ylab("PCO2 [17%]") + xlab("PCO1 [9%]")
a
warnings()
library(extrafont)
loadfonts(device = "win")
loadfonts(device = "postscript")
loadfonts()
a<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Tissue)) + geom_point() +
xlab("PCO 1") + ylab("PCO 2")+ theme_classic()+scale_color_manual(values=cbPalette) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + ylab("PCO2 [17%]") + xlab("PCO1 [9%]")
a
PCOMeta[c(which(PCOMeta$Site=="Bodo")),"Site"] <- "Bodø"
shapePalette <-c(16,16,16,16,16,16,16,1,1,1,1,1,1,1,1,1)
cbPalette <- c("#0072B2","#009E73","#000000","#CC79A7","#F0E442","#E69F00","#D55E00","#0072B2","#56B4E9","#009E73","#000000","#999999","#CC79A7","#F0E442","#E69F00","#D55E00")
rightLabs<- c("Uumm","Hali","Scho","Wood","Newp","Lewe","Beau","Bodø","Oban","Mine","Sidm","Vian","Lima","Torr","Tagu","Cadi")
b<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Site, shape = Site)) + geom_point() +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "B") +
xlab("PCO1 [9%]") + ylab("PCO2 [17%]")+ theme_classic() + guides(col=guide_legend(ncol=2)) + scale_color_manual(values=cbPalette,breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"), labels=rightLabs) +scale_shape_manual(values=shapePalette, breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"),labels = rightLabs) + labs(color = "Site",shape="Site")
b
b<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Site, shape = Site)) + geom_point(lwd=2) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "B") +
xlab("PCO1 [9%]") + ylab("PCO2 [17%]")+ theme_classic() + guides(col=guide_legend(ncol=2)) + scale_color_manual(values=cbPalette,breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"), labels=rightLabs) +scale_shape_manual(values=shapePalette, breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"),labels = rightLabs) + labs(color = "Site",shape="Site")
b
b<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Site, shape = Site)) + geom_point(lwd=1) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "B") +
xlab("PCO1 [9%]") + ylab("PCO2 [17%]")+ theme_classic() + guides(col=guide_legend(ncol=2)) + scale_color_manual(values=cbPalette,breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"), labels=rightLabs) +scale_shape_manual(values=shapePalette, breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"),labels = rightLabs) + labs(color = "Site",shape="Site")
b
b<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Site, shape = Site)) + geom_point(lwd=4) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "B") +
xlab("PCO1 [9%]") + ylab("PCO2 [17%]")+ theme_classic() + guides(col=guide_legend(ncol=2)) + scale_color_manual(values=cbPalette,breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"), labels=rightLabs) +scale_shape_manual(values=shapePalette, breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"),labels = rightLabs) + labs(color = "Site",shape="Site")
b
b<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Site, shape = Site)) + geom_point(lwd=3) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "B") +
xlab("PCO1 [9%]") + ylab("PCO2 [17%]")+ theme_classic() + guides(col=guide_legend(ncol=2)) + scale_color_manual(values=cbPalette,breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"), labels=rightLabs) +scale_shape_manual(values=shapePalette, breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"),labels = rightLabs) + labs(color = "Site",shape="Site")
b
x<-grid.arrange(a, b , ncol=1)
library(gridExtra)
x<-grid.arrange(a, b , ncol=1)
ggsave("testsave2.png",x,width=7.5,height=8,units="in")
b<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Site, shape = Site)) + geom_point(lwd=3, stroke=2) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "B") +
xlab("PCO1 [9%]") + ylab("PCO2 [17%]")+ theme_classic() + guides(col=guide_legend(ncol=2)) + scale_color_manual(values=cbPalette,breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"), labels=rightLabs) +scale_shape_manual(values=shapePalette, breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"),labels = rightLabs) + labs(color = "Site",shape="Site")
b
x<-grid.arrange(a, b , ncol=1)
ggsave("testsave2.png",x,width=7.5,height=8,units="in")
b<-ggplot(PCOMeta, aes(x=`Axis 1`, y=`Axis 2`, col = Site, shape = Site)) + geom_point(lwd=2, stroke=2) +  theme(text=element_text(size=10, family="Arial")) + labs(tag = "B") +
xlab("PCO1 [9%]") + ylab("PCO2 [17%]")+ theme_classic() + guides(col=guide_legend(ncol=2)) + scale_color_manual(values=cbPalette,breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"), labels=rightLabs) +scale_shape_manual(values=shapePalette, breaks=c("Uum","Hali","SCH","WH","Newp","Lew","Beau","Bodø","Oban","Mine","Sid","Viana","Lima","Torr","Tagus","Cad"),labels = rightLabs) + labs(color = "Site",shape="Site")
b
x<-grid.arrange(a, b , ncol=1)
ggsave("testsave2.png",x,width=7.5,height=8,units="in")
library(readr)
library(ggplot2)
PCO <- read_csv("C:/Users/Rocky/Desktop/Capistrant-Fossa et al. 2021 Journal of Phycology Code and Data/Principal Coordinate Analysis (PCO)/PCO.csv")
library(extrafont)
#font_import()
loadfonts(device = "win")
loadfonts(device = "postscript")
loadfonts()
library(plotly)
PCO<-PCO[-c(which(PCO$Site=="Tasi")),]
PCO<-PCO[-c(which(PCO$Species=="Fd")),]
PCO<-PCO[-c(which(PCO$Species=="Fs")),]
PCO[c(which(PCO$Site=="Bodo")),"Site"] <- "Bodø"
PCO[c(which(PCO$long=="e")),"long"] <- "E"
PCO[c(which(PCO$long=="w")),"long"] <- "W"
a <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = Tissue, color = Tissue)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray","gray0","gray87"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
a
a <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = Tissue, color = Tissue)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray","gray30","gray87"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
a
a <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = Tissue, color = Tissue)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray30","gray30","gray87"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
a
a <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = Tissue, color = Tissue)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray","gray30","gray87"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
a
a <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = Tissue, color = Tissue)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray","gray0","gray87"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
a
a <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = Tissue, color = Tissue)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray","gray50","gray87"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
a
a <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = Tissue, color = Tissue)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray","gray0","gray30"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
a
a <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = Tissue, color = Tissue)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray","gray0","gray50"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(tag = "A") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
a
b <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = lat,color=lat)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray0","gray","gray50"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(color = "Region",shape="Region") + labs(tag = "B") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
b
c <- ggplot(PCO, aes(x=PCO1, y=PCO2, shape = long,color=long)) + geom_point() + theme_classic() + scale_color_manual(values=c("gray0","gray","gray87"))+scale_shape_manual(values=c(16,15,17)) +
theme(legend.position = c(1, 0),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(color = "Side",shape="Side") + labs(tag = "C") + xlab("PCO1 [17%]") + ylab("PCO2 [8%]")
c
#######################Make Panel D
dismatrix_all <- data.frame(read_csv("C:/Users/Rocky/Desktop/dismatrix_all.csv"))
Meta <- read_csv("C:/Users/Rocky/Desktop/Capistrant-Fossa et al. 2021 Journal of Phycology Code and Data/Rarified Data Sets/FucusPumEnvironmental4918Metadata.csv")
Lats <- read_csv("C:/Users/Rocky/Desktop/Capistrant-Fossa et al. 2021 Journal of Phycology Code and Data/Supplemental Data/Lats.csv")
Meta<-merge(Meta,Lats,by.x="Site",by.y="Sites")
row.names(dismatrix_all) <- dismatrix_all$X1
dismatrix_all<-dismatrix_all[,-c(1)]
dismatrix_all[upper.tri(dismatrix_all)] <- NA
library(tidyr)
dismatrix_all$Site1<-rownames(dismatrix_all)
data_long <- gather(dismatrix_all, Site2, Similarity,colnames(dismatrix_all)[1:865], factor_key=TRUE)
longNoSame<-subset(data_long,data_long$Site1!=data_long$Site2)
longNoSame<-subset(longNoSame,is.na(longNoSame$Similarity)==FALSE)
Site1Meta<-merge(longNoSame,Meta[,c(1,2,13,14)],by.x="Site1",by.y="SampleName")
colnames(Site1Meta)[5:6] <- c("Lat1","Lon1")
Site2Meta<-merge(Site1Meta,Meta[,c(1,2,13,14)],by.x="Site2",by.y="SampleName")
colnames(Site2Meta)[8:9] <- c("Lat2","Lon2")
library(geosphere)
Site2Meta$geoDistKM <- NA
for(q in 1:nrow(Site2Meta)){
Site2Meta$geoDistKM[q]<-distHaversine(p1=c(Site2Meta$Lon1[q],Site2Meta$Lat1[q]),p2=c(Site2Meta$Lon2[q],Site2Meta$Lat2[q]))/1000
}
Site2Meta$Side1<-ifelse(Site2Meta$Lon1 < -30,"West","East")
Site2Meta$Side2<-ifelse(Site2Meta$Lon2 < -30,"West","East")
Site2Meta<-subset(Site2Meta,Site2Meta$Site.x != "Green")
Site2Meta<-subset(Site2Meta,Site2Meta$Site.y != "Green")
Site2Meta$SameSide <- Site2Meta$Side1 == Site2Meta$Side2
library(ggplot2)
Site2Meta[c(which(Site2Meta$SameSide=="TRUE")),"SameSide"] <- "Same"
Site2Meta[c(which(Site2Meta$SameSide=="FALSE")),"SameSide"] <- "Opposite"
d <- ggplot(Site2Meta, aes(x=geoDistKM, y=Similarity, color=SameSide)) + geom_point() + theme_classic() + scale_color_manual(values = c("gray0","gray")) + xlab("Geographic Distance (km)") +
theme(legend.position = c(1, 1),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(1, 1, 1, 1)) + theme(text=element_text(size=10, family="Arial")) + labs(tag = "D") + labs(color = "Atlantic Side")
library(gridExtra)
x<-grid.arrange(a, b , c, d, ncol=2)
ggsave("testsave.png",x,width=8,height=6.5,units="in")
#Load in required packages
library(readr)
library(ggplot2)
library(tidyverse)
library(dplyr)
`%notin%` <- Negate(`%in%`)
setwd("C:/Users/Rocky/Desktop/Capistrant-Fossa et al. 2021 Journal of Phycology Code and Data/Rarified Data Sets")
Meta <- read_csv("FucusPumEnvironmental4918Metadata.csv")
ASVs <- read_csv("tFucusPumEnvironmental4918.csv")
Tax <- read_csv("FucusPumEnvironmental4918Taxonomy.csv")
data_long <- gather(ASVs, ASVid, measurement, colnames(ASVs[,2:1781]), factor_key=TRUE)
data_long_met<-merge(data_long,Meta,by="SampleName")
data_long_met_tax<-merge(data_long_met,Tax,by="ASVid")
Fv<-subset(data_long_met_tax,data_long_met_tax$Species=="Fv")
FvAvg<-aggregate(x = Fv$measurement, by = list(Fv$genus), FUN = "sum")
FvAvg$Avg <- FvAvg$x/sum(FvAvg$x)
FvAvg <- FvAvg[-c(which(FvAvg$Avg < 0.02)),]
Fv[(which(Fv$genus %notin% FvAvg$Group.1 == TRUE)),"genus"] <- "Other"
Fv[(which(Fv$genus  == "Bacteria_ph_cl_or_fa_ge")),"genus"] <- "Unknown"
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73","gray87" ,"#F0E442", "#0072B2", "#D55E00", "#CC79A7","#999999")
Fv[c(which(Fv$genus=="Alphaproteobacteria_or_fa_ge")),"genus"] <- "unk_Alpha"
Fv[c(which(Fv$genus=="BurkholderiaCaballeroniaParaburkholderia")),"genus"] <- "BCP"
ggplot(Fv,aes(fill=genus,y=measurement,x=Tissue)) + geom_bar(position="fill",stat="identity")+scale_fill_manual(values=cbbPalette, name = "Genus")+theme_classic()+ylab("Proportion") + theme(text=element_text(size=10, family="Arial")) + theme(legend.text = element_text(face = "italic"))
ggsave("Figure4.png",width = 3.5,units = "in")
